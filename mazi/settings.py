"""
Django settings for mazi project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path

# alteração da constante error para ser compatível com bootstrap
from django.contrib.messages import constants as messages


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# isso e pra separar num diretorio especifico todas as apps do projeto
# caso de erro de import (normalmente no mc_login) descomentar o print abaixo
# e rodar o runserver pra saber se o primeiro diretorio que aparece na listagem
# realmente eh o diretorio apps do projeto
root = lambda *x: os.path.join(BASE_DIR + '/mazi/', *x)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-kzu%ial01-g2m$ej9@livg3trj)#sxmw55l)8-&hjm$t)lu5bs'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

PROJECT_APPS = [
    'account.apps.AccountConfig',
    'core.apps.CoreConfig',
    'atendimento.apps.AtendimentoConfig',
    'curador.apps.CuradorConfig',
    'site_setup.apps.SiteSetupConfig',
]

THIRD_PARTY_APPS = [
    'widget_tweaks',
    'django_summernote',
]

INSTALLED_APPS += PROJECT_APPS
INSTALLED_APPS += THIRD_PARTY_APPS

# USUÁRIOS - Redefinições para substituição do modelo
AUTH_USER_MODEL = 'account.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mazi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'APP_DIRS': True,
        'DIRS': [
            root('templates'),
        ],
        'OPTIONS': {
            'context_processors': [
                'site_setup.context_processors.site_settings',
                'site_setup.context_processors.client_bg_img',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mazi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Tags do framework de mensagens
# a mensagem de ERROR deve retornar 'alert-danger' por causa do Bootstrap

MESSAGE_TAGS = {
    messages.DEBUG: 'alert-secondary',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'pt-br'

USE_THOUSAND_SEPARATOR = True

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email settings
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'registri@minicom.com.br'
EMAIL_HOST_PASSWORD = 'Registri@2020Abril'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'SOCIALA <registri@minicom.com.br>'


# Constantes de Login
# LOGIN_URL - nome da url de login. Util quando utilizar decorator.
LOGIN_URL = 'account:login'
LOGIN_REDIRECT_URL = 'account:home'
LOGOUT_URL = 'account:logout'


# Media Location
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

#summernote
X_FRAME_OPTIONS = 'SAMEORIGIN'

## SITE LOCATIONS
SITE_MEDIA = '__site__/'
IMAGENS = 'img/'
CSS = 'css/'
BACKGROUND_IMAGE = SITE_MEDIA + IMAGENS + 'bg/'
LOGO_IMAGE = SITE_MEDIA + IMAGENS + 'logo/'
FAVICON_IMAGE = SITE_MEDIA + IMAGENS + 'favicon/'
LANDING_BG_IMAGE = 'landing/assets/img/'
CSS_PATH = SITE_MEDIA + CSS
